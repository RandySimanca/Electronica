// backend/src/config/env.js
import dotenv from "dotenv";
import path from "path";
import { fileURLToPath } from "url";

// Obtener la ruta del archivo actual
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Cargar variables desde .env (ubicado en backend/)
dotenv.config({ path: path.resolve(__dirname, "../../.env") });

// Configuraci√≥n de la aplicaci√≥n
export const config = {
  PORT: process.env.PORT || 3000,
  NODE_ENV: process.env.NODE_ENV || "development",
  CORS_ORIGIN: process.env.CORS_ORIGIN || "*",
  DB_HOST: process.env.DB_HOST || "localhost",
  DB_PORT: process.env.DB_PORT ? Number(process.env.DB_PORT) : 3306,
  DB_USER: process.env.DB_USER || "root",
  DB_PASSWORD: process.env.DB_PASSWORD || "",
  DB_NAME: process.env.DB_NAME || "electronica_store",
  JWT_SECRET: process.env.JWT_SECRET || "tu-secreto-jwt-muy-seguro",
};

// Validar configuraci√≥n m√≠nima obligatoria
export const validateConfig = () => {
  if (!config.DB_HOST || !config.DB_USER || !config.DB_PASSWORD || !config.DB_NAME) {
    console.error(
      "‚ùå Faltan variables de entorno obligatorias (DB_HOST, DB_USER, DB_PASSWORD, DB_NAME)"
    );
    process.exit(1);
  }
};

// Depuraci√≥n opcional: mostrar si la contrase√±a se est√° leyendo
console.log("üîë DB_USER:", config.DB_USER);
console.log("üîë DB_PASSWORD:", config.DB_PASSWORD ? "****" : "(vac√≠a)");
